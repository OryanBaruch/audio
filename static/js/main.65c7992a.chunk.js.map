{"version":3,"sources":["audioTracks/audio1.mp3","audioTracks/audio2.mp3","audioTracks/audio3.mp3","audioTracks/audio4.mp3","audioTracks/audio5.mp3","audioTracks/audio6.mp3","audioTracks/audio7.mp3","audioTracks/audio8.mp3","audioTracks/audio9.mp3","components/Buttons/PauseCircle.js","components/Buttons/PlayCircle.js","components/Buttons/PlayPauseAll.jsx","components/Buttons/SingleButton.jsx","components/ButtonPad.jsx","App.js","index.js"],"names":["PauseCircle","forwardRef","ref","color","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","displayName","PlayCircle","points","PlayPauseAll","toggleAll","player","Button","className","variant","onClick","SingleButton","theme","onToggle","active","useState","setPlayer","ButtonPad","allInstrumentsStates","instrumentsWithToggleState","setInstrumentsWithToggle","playing","setPlay","isPlaying","id","find","element","console","log","i","length","sound","pause","currentTime","play","useEffect","instrumentsWithToggle","map","toggle","filteredArray","filter","delay","timeDiffrent","getDelay","newPlayList","push","setTimeout","loop","audioClips","Audio","audio1","audio2","audio3","audio4","audio5","audio6","audio7","audio8","audio9","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,G,MAAA,IAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,mC,wCCGnCA,EAAcC,sBAAW,WAAiDC,GAAS,IAAD,IAAtDC,aAAsD,MAA9C,eAA8C,MAA9BC,YAA8B,MAAvB,GAAuB,EAAhBC,EAAgB,iBACtF,OACE,8CACEH,IAAKA,EACLI,MAAM,6BACNC,MAAOH,EACPI,OAAQJ,EACRK,QAAQ,YACRC,KAAK,OACLC,OAAQR,EACRS,YAAY,IACZC,cAAc,QACdC,eAAe,SACXT,GAXN,cAaE,wBAAQU,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,sBAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACjC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,aAUvCrB,EAAYsB,YAAc,cAEXtB,Q,mBC7BTuB,EAAatB,sBAAW,WAAiDC,GAAS,IAAD,IAAtDC,aAAsD,MAA9C,eAA8C,MAA9BC,YAA8B,MAAvB,GAAuB,EAAhBC,EAAgB,iBACrF,OACE,8CACEH,IAAKA,EACLI,MAAM,6BACNC,MAAOH,EACPI,OAAQJ,EACRK,QAAQ,YACRC,KAAK,OACLC,OAAQR,EACRS,YAAY,IACZC,cAAc,QACdC,eAAe,SACXT,GAXN,cAaE,wBAAQU,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,yBAASO,OAAO,iCAUtBD,EAAWD,YAAc,aAEVC,Q,eCPAE,EAlBM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UAAYC,EAAY,EAAZA,OAOlC,OACE,8BACE,cAACC,EAAA,EAAD,CAAQC,UAAU,eAAeC,QAAQ,YAAY3B,MAAM,UAC3D4B,QAPoB,WACAL,KAKpB,SAGIC,EAA0B,cAAC,EAAD,IAAjB,cAAC,EAAD,SCkBJK,EA/BM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAeC,GAAe,EAAvBC,OAAuB,EAAfD,UACrC,EAA4BE,oBAAS,GAArC,mBAAOT,EAAP,KAAeU,EAAf,KAeA,OACE,mCACE,qBAAKR,UAAU,oBAAf,SACE,yBACEA,UAAWF,EAAS,eAAiB,iBACrCI,QAjBa,WACdJ,IAKI,EACPU,GAAU,GACVH,MANAA,IACAG,GAAU,IACH,IAWL,UAIIV,EAA0B,cAAC,EAAD,IAAjB,cAAC,EAAD,IACX,qBAAKE,UAAU,QAAf,SAAwBI,YCsFnBK,EA/GG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBACnB,EAA+DH,mBAAS,IAAxE,mBAAOI,EAAP,KAAmCC,EAAnC,KACA,EAA2BL,mBAAS,IAApC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAA4BP,oBAAS,GAArC,mBAAOT,EAAP,KAAeU,EAAf,KAGMO,EAAY,SAACC,GAKjB,OAJmBH,EAAQI,MAAK,SAACC,GAE/B,OADAC,QAAQC,IAAIF,EAAQF,IACbE,EAAQF,KAAOA,MAmBpBnB,EAAY,WAChB,IAAK,IAAIwB,EAAI,EAAGA,EAAIR,EAAQS,OAAQD,IAAK,CACvC,IAAMH,EAAUL,EAAQQ,GACxBF,QAAQC,IAAIF,GACRA,EAAQZ,QACVY,EAAQZ,QAAS,EACjBY,EAAQK,MAAMC,QACdN,EAAQK,MAAME,YAAc,EAC5BjB,GAAU,KAEVU,EAAQZ,QAAS,EACjBY,EAAQK,MAAMG,OACdlB,GAAU,MA4ChB,OAtCAmB,qBAAU,WACR,IAAMC,EAAwBlB,EAAqBmB,KACjD,YAAmC,IAAhCN,EAA+B,EAA/BA,MAAOnB,EAAwB,EAAxBA,MAAOY,EAAiB,EAAjBA,GAAIV,EAAa,EAAbA,OA8BnB,MAAO,CAAEwB,OA7BM,SAACd,GACd,GAAIV,GAMF,GALAiB,EAAMC,QACND,EAAME,YAAc,EAEpBnB,GAAS,EAELS,EAAUC,GAAK,CACjB,IAAIe,EAAgBlB,EAAQmB,QAC1B,SAACd,GAAD,OAAgC,IAAnBA,EAAQZ,UAEvBQ,EAAQiB,GACRZ,QAAQC,IAAIW,QAET,CACLzB,GAAS,EACT,IAAM2B,EAlDC,WACfd,QAAQC,IAAI,iBACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAQS,OAAQD,IAClC,GAAqC,IAAjCR,EAAQQ,GAAGE,MAAME,YAAmB,CACtC,IAAMS,EAAe,IAAOrB,EAAQQ,GAAGE,MAAME,YAE7C,OADAN,QAAQC,IAAIP,EAAQQ,GAAGE,MAAME,aACtBS,GA4CWC,GACd,IAAKpB,EAAUC,GAAK,CAClB,IAAMoB,EAAcvB,EAAQwB,KAAK,CAAErB,KAAIO,QAAOjB,WAC9CQ,EAAQsB,GAGVE,YAAW,WAETf,EAAMG,OACNH,EAAMgB,MAAO,IACZN,KAGUV,QAAOnB,QAAOY,KAAIV,aAGvCM,EAAyBgB,KACxB,IAGD,gCACE,qBAAK5B,UAAU,kBAAf,SACE,cAAC,EAAD,CAAcF,OAAQA,EAAQD,UAAWA,MAE3C,qBAAKG,UAAU,oBAAf,SACGW,EAA2BkB,KAC1B,YAA2C,IAAxCvB,EAAuC,EAAvCA,OAAQwB,EAA+B,EAA/BA,OAAQP,EAAuB,EAAvBA,MAAOnB,EAAgB,EAAhBA,MAAOY,EAAS,EAATA,GAC/B,OACE,8BACE,cAAC,EAAD,CACEnB,UAAWA,EACX0B,MAAOA,EACPP,GAAIA,EACJZ,MAAOA,EACPE,OAAQA,EACRD,SAAU,kBAAMyB,EAAOd,OAPjBA,YCpFXwB,EAAa,CACxB,CAAEjB,MAAO,IAAIkB,MAAMC,GAAStC,MAAO,SAAUY,GAAI,EAAGV,QAAQ,GAC5D,CAAEiB,MAAO,IAAIkB,MAAME,GAASvC,MAAO,OAAQY,GAAI,EAAGV,QAAQ,GAC1D,CAAEiB,MAAO,IAAIkB,MAAMG,GAASxC,MAAO,gBAAiBY,GAAI,EAAGV,QAAQ,GACnE,CAAEiB,MAAO,IAAIkB,MAAMI,GAASzC,MAAO,iBAAkBY,GAAI,EAAGV,QAAQ,GACpE,CAAEiB,MAAO,IAAIkB,MAAMK,GAAS1C,MAAO,QAASY,GAAI,EAAGV,QAAQ,GAC3D,CAAEiB,MAAO,IAAIkB,MAAMM,GAAS3C,MAAO,eAAgBY,GAAI,EAAGV,QAAQ,GAClE,CAAEiB,MAAO,IAAIkB,MAAMO,GAAS5C,MAAO,SAAUY,GAAI,EAAGV,QAAQ,GAC5D,CAAEiB,MAAO,IAAIkB,MAAMQ,GAAS7C,MAAO,MAAOY,GAAI,EAAGV,QAAQ,GACzD,CAAEiB,MAAO,IAAIkB,MAAMS,GAAS9C,MAAO,SAAUY,GAAI,EAAGV,QAAQ,IAsB/C6C,MApBf,WACE,MAAwD5C,mBAASiC,GAAjE,mBAAO9B,EAAP,KAEA,OAFA,KAGE,mCACA,sBAAKV,UAAU,YAAf,UAEE,oBAAIA,UAAU,WAAd,SACE,8DAEF,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CACEU,qBAAsBA,YC/BhC0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.65c7992a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/audio1.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/audio2.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/audio3.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/audio4.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/audio5.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/audio6.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/audio7.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/audio8.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/audio9.f2d668af.mp3\";","import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PauseCircle = forwardRef(({ color = 'currentColor', size = 24, ...rest }, ref) => {\r\n  return (\r\n    <svg\r\n      ref={ref}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke={color}\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      {...rest}\r\n    >\r\n      <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n      <line x1=\"10\" y1=\"15\" x2=\"10\" y2=\"9\" />\r\n      <line x1=\"14\" y1=\"15\" x2=\"14\" y2=\"9\" />\r\n    </svg>\r\n  );\r\n});\r\n\r\nPauseCircle.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nPauseCircle.displayName = 'PauseCircle';\r\n\r\nexport default PauseCircle;","import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlayCircle = forwardRef(({ color = 'currentColor', size = 24, ...rest }, ref) => {\r\n  return (\r\n    <svg\r\n      ref={ref}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke={color}\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      {...rest}\r\n    >\r\n      <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n      <polygon points=\"10 8 16 12 10 16 10 8\" />\r\n    </svg>\r\n  );\r\n});\r\n\r\nPlayCircle.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nPlayCircle.displayName = 'PlayCircle';\r\n\r\nexport default PlayCircle;","import React from \"react\";\r\nimport PauseCircle from \"./PauseCircle\";\r\nimport PlayCircle from \"./PlayCircle\";\r\nimport \"./buttons.css\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst PlayPauseAll = ({ toggleAll , player}) => {\r\n\r\n  //check playet for changeing the button to play or pause.\r\n  const handleToggleAll = () => {\r\n    !player? toggleAll(): toggleAll()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className='playPauseAll' variant=\"contained\" color=\"primary\"\r\n      onClick={handleToggleAll}\r\n      >\r\n        {!player ? <PlayCircle /> : <PauseCircle />}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayPauseAll;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PauseCircle from \"./PauseCircle\";\r\nimport PlayCircle from \"./PlayCircle\";\r\nimport \"./buttons.css\";\r\n\r\nconst SingleButton = ({ theme, active, onToggle }) => {\r\n  const [player, setPlayer] = useState(false);\r\n\r\n  //helper function so i can toggle which ever i want in the array\r\n  const handleToggle = () => {\r\n    if (!player) {\r\n      onToggle();\r\n      setPlayer(true);\r\n      active=true\r\n    } else {\r\n      active=false\r\n      setPlayer(false);\r\n      onToggle();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"buttons_container\">\r\n        <button\r\n          className={player ? \"state active\" : \"state inactive\"}\r\n          onClick={handleToggle}\r\n        >\r\n          {!player ? <PlayCircle /> : <PauseCircle />}\r\n          <div className=\"theme\">{theme}</div>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PlayPauseAll from \"./Buttons/PlayPauseAll\";\r\nimport SingleButton from \"./Buttons/SingleButton\";\r\n\r\nconst ButtonPad = ({ allInstrumentsStates }) => {\r\n  const [instrumentsWithToggleState, setInstrumentsWithToggle] = useState([]);\r\n  const [playing, setPlay] = useState([]);\r\n  const [player, setPlayer] = useState(false);\r\n\r\n  //helping function so i can get track if i have actived sounds in the array. (playing)\r\n  const isPlaying = (id) => {\r\n    const findIfPlay = playing.find((element) => {\r\n      console.log(element.id);\r\n      return element.id === id;\r\n    });\r\n    return findIfPlay;\r\n  };\r\n\r\n  //delay : bring the calc of (audio time - the current time of the prev one.)\r\n  const getDelay = () => {\r\n    console.log(\"regular check\");\r\n    for (let i = 0; i < playing.length; i++) {\r\n      if (playing[i].sound.currentTime !== 0) {\r\n        const timeDiffrent = 8000 - playing[i].sound.currentTime;\r\n        console.log(playing[i].sound.currentTime);\r\n        return timeDiffrent;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  //toggle All active/inactive sound.\r\n  const toggleAll = () => {\r\n    for (let i = 0; i < playing.length; i++) {\r\n      const element = playing[i];\r\n      console.log(element);\r\n      if (element.active) {\r\n        element.active = false;\r\n        element.sound.pause();\r\n        element.sound.currentTime = 0;\r\n        setPlayer(false);\r\n      } else {\r\n        element.active = true;\r\n        element.sound.play();\r\n        setPlayer(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  //map with useEffect the state from App\r\n  useEffect(() => {\r\n    const instrumentsWithToggle = allInstrumentsStates.map(\r\n      ({ sound, theme, id, active }) => {\r\n        const toggle = (id) => {\r\n          if (active) {\r\n            sound.pause();\r\n            sound.currentTime = 0;\r\n\r\n            active = false;\r\n            // Remove the element from playing array in the state\r\n            if (isPlaying(id)) {\r\n              let filteredArray = playing.filter(\r\n                (element) => element.active === true\r\n              );\r\n              setPlay(filteredArray);\r\n              console.log(filteredArray);\r\n            }\r\n          } else {\r\n            active = true;\r\n            const delay = getDelay();\r\n            if (!isPlaying(id)) {\r\n              const newPlayList = playing.push({ id, sound, active });\r\n              setPlay(newPlayList);\r\n            }\r\n\r\n            setTimeout(() => {\r\n              // Add the element to playing array in the state\r\n              sound.play();\r\n              sound.loop = true;\r\n            }, delay);\r\n          }\r\n        };\r\n        return { toggle, sound, theme, id, active };\r\n      }\r\n    );\r\n    setInstrumentsWithToggle(instrumentsWithToggle);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"toggleAllButton\">\r\n        <PlayPauseAll player={player} toggleAll={toggleAll} />\r\n      </div>\r\n      <div className=\"buttons_container\">\r\n        {instrumentsWithToggleState.map(\r\n          ({ active, toggle, sound, theme, id }) => {\r\n            return (\r\n              <div key={id}>\r\n                <SingleButton\r\n                  toggleAll={toggleAll}\r\n                  sound={sound}\r\n                  id={id}\r\n                  theme={theme}\r\n                  active={active}\r\n                  onToggle={() => toggle(id)}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonPad;\r\n","import \"./App.css\";\nimport audio1 from \"./audioTracks/audio1.mp3\";\nimport audio2 from \"./audioTracks/audio2.mp3\";\nimport audio3 from \"./audioTracks/audio3.mp3\";\nimport audio4 from \"./audioTracks/audio4.mp3\";\nimport audio5 from \"./audioTracks/audio5.mp3\";\nimport audio6 from \"./audioTracks/audio6.mp3\";\nimport audio7 from \"./audioTracks/audio7.mp3\";\nimport audio8 from \"./audioTracks/audio8.mp3\";\nimport audio9 from \"./audioTracks/audio9.mp3\";\nimport React, { useState } from \"react\";\nimport ButtonPad from \"./components/ButtonPad\";\n\nexport const audioClips = [\n  { sound: new Audio(audio1), theme: \"Techno\", id: 1, active: false },\n  { sound: new Audio(audio2), theme: \"Beat\", id: 2, active: false },\n  { sound: new Audio(audio3), theme: \"Guitar`s base\", id: 3, active: false },\n  { sound: new Audio(audio4), theme: \"Country guitar\", id: 4, active: false },\n  { sound: new Audio(audio5), theme: \"Drums\", id: 5, active: false },\n  { sound: new Audio(audio6), theme: \"Cocunuts BMX\", id: 6, active: false },\n  { sound: new Audio(audio7), theme: \"Aliens\", id: 7, active: false },\n  { sound: new Audio(audio8), theme: \"80s\", id: 8, active: false },\n  { sound: new Audio(audio9), theme: \"Spooky\", id: 9, active: false },\n];\nfunction App() {\n  const [allInstrumentsStates, setAllInstrumentsStates] = useState(audioClips);\n\n  return (\n    <>\n    <div className='contianer'>\n\n      <h1 className=\"headline\">\n        <strong>Welcome to Looper App:</strong>\n      </h1>\n      <div className=\"App container\">\n        <ButtonPad\n          allInstrumentsStates={allInstrumentsStates}\n          />\n      </div>\n          </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}